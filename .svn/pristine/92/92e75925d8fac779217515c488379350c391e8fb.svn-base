<?php

namespace frontend\controllers;

use Yii;
use app\models\ClassLessonPlan;
use app\models\ClassLessonPlanSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * ClassLessonPlanController implements the CRUD actions for ClassLessonPlan model.
 */
class ClassLessonPlanController extends Controller
{
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['post'],
                ],
            ],
        ];
    }

    /**
     * Lists all ClassLessonPlan models.
     * @return mixed
     */
    public function actionIndex()
    {
        // Store return Url
        $this->storeReturnUrl();

        $lesson_plan_events = ClassLessonPlan::find()->All();
        $events = [];

        foreach ($lesson_plan_events as $lp_event) 
        {
            $event = new \yii2fullcalendar\models\Event();
            $event->id = $lp_event->lesson_plan_id;
            // $event->title = $lp_event->class_subject_header_id;
            $event->title = $lp_event->title;
            $event->start = $lp_event->lesson_date;
            $event->end = $lp_event->end_date;
            $events[] = $event;

            // print_r($events);
            // die();
        }

        return $this->render('index', [
            'events' => $events,
        ]);
    }

    /**
     * Displays a single ClassLessonPlan model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new ClassLessonPlan model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        // Get logged in user_id
        $user_id = \Yii::$app->user->identity->id;
    
        $model = new ClassLessonPlan();
        $model->create_user_id = $user_id;
        $model->create_date = date('Y-m-d');

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->goBack();
            // return $this->redirect(['view', 'id' => $model->lesson_plan_id]);
        } else {
            return $this->renderAjax('create', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Updates an existing ClassLessonPlan model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->lesson_plan_id]);
        }elseif (Yii::$app->request->isAjax) {
            return $this->renderAjax('_form', [
                        'model' => $model
            ]);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing ClassLessonPlan model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    private function storeReturnUrl()
    {
        Yii::$app->user->returnUrl = Yii::$app->request->url;
    }
    
    /**
     * Finds the ClassLessonPlan model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return ClassLessonPlan the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = ClassLessonPlan::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
